{"ast":null,"code":"var _jsxFileName = \"/Users/checkmate/Desktop/PHASE2 PROJECT/Weather/src/components/WeatherGrid.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport WeatherCard from \"./WeatherCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  weatherGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n    gridGap: \"20px\",\n    padding: \"20px\"\n  }\n}));\nconst WeatherGrid = _ref => {\n  _s();\n  let {\n    weatherData\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.weatherGrid,\n    children: weatherData.map((data, index) => /*#__PURE__*/_jsxDEV(WeatherCard, {\n      weatherData: data\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherGrid, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = WeatherGrid;\nexport default WeatherGrid;\nvar _c;\n$RefreshReg$(_c, \"WeatherGrid\");","map":{"version":3,"names":["React","Box","makeStyles","WeatherCard","useStyles","theme","weatherGrid","display","gridTemplateColumns","gridGap","padding","WeatherGrid","weatherData","classes","map","data","index"],"sources":["/Users/checkmate/Desktop/PHASE2 PROJECT/Weather/src/components/WeatherGrid.js"],"sourcesContent":["import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport WeatherCard from \"./WeatherCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  weatherGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n    gridGap: \"20px\",\n    padding: \"20px\",\n  },\n}));\n\nconst WeatherGrid = ({ weatherData }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.weatherGrid}>\n      {weatherData.map((data, index) => (\n        <WeatherCard key={index} weatherData={data} />\n      ))}\n    </Box>\n  );\n};\n\nexport default WeatherGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,QAAQ,mBAAmB;AACnD,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAK,KAAM;EACvCC,WAAW,EAAE;IACXC,OAAO,EAAE,MAAM;IACfC,mBAAmB,EAAE,sCAAsC;IAC3DC,OAAO,EAAE,MAAM;IACfC,OAAO,EAAE;EACX;AACF,CAAC,CAAC,CAAC;AAEH,MAAMC,WAAW,GAAG,QAAqB;EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC;EAClC,MAAMC,OAAO,GAAGT,SAAS,EAAE;EAE3B,oBACE,QAAC,GAAG;IAAC,SAAS,EAAES,OAAO,CAACP,WAAY;IAAA,UACjCM,WAAW,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B,QAAC,WAAW;MAAa,WAAW,EAAED;IAAK,GAAzBC,KAAK;MAAA;MAAA;MAAA;IAAA,QACxB;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAVIL,WAAW;EAAA,QACCP,SAAS;AAAA;AAAA,KADrBO,WAAW;AAYjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}