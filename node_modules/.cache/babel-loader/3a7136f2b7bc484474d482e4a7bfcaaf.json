{"ast":null,"code":"var _jsxFileName = \"/Users/checkmate/Desktop/PHASE2 PROJECT/Weather/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport logo from \"../images/bg.jpg\";\nimport Form from \"./Form\";\nimport ChatBot from \"react-simple-chatbot\";\nimport Header from \"./Header\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  component: {\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    background: `linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)), url(${logo})`,\n    backgroundSize: \"cover\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\"\n    }\n  },\n  leftContainer: {\n    height: \"100%\",\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: \"20px 0 0 20px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"30%\",\n      borderRadius: \"20px 20px 0 0\"\n    }\n  },\n  rightContainer: {\n    height: \"67%\",\n    width: \"26%\",\n    position: \"relative\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"70%\"\n    }\n  },\n  chatbot: {\n    position: \"absolute\",\n    bottom: \"10px\",\n    left: \"10px\"\n  },\n  weatherGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n    gridGap: \"20px\",\n    padding: \"20px\"\n  },\n  weatherCard: {\n    background: \"#fff\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.2)\"\n  },\n  weatherIcon: {\n    width: \"50px\",\n    height: \"50px\"\n  },\n  weatherTemp: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n    margin: \"0\"\n  },\n  weatherDesc: {\n    fontSize: \"1.2rem\",\n    margin: \"0\"\n  }\n}));\nconst lightTheme = {\n  background: \"#f5f8fb\",\n  headerBgColor: \"#0084ff\",\n  headerFontColor: \"#fff\",\n  headerFontSize: \"15px\",\n  botBubbleColor: \"#0084ff\",\n  botFontColor: \"#fff\",\n  userBubbleColor: \"#fff\",\n  userFontColor: \"#4a4a4a\"\n};\nconst darkTheme = {\n  background: \"#222\",\n  headerBgColor: \"#0084ff\",\n  headerFontColor: \"#fff\",\n  headerFontSize: \"15px\",\n  botBubbleColor: \"#0084ff\",\n  botFontColor: \"#fff\",\n  userBubbleColor: \"#fff\",\n  userFontColor: \"#4a4a4a\"\n};\nconst Weather = () => {\n  _s();\n  const classes = useStyles();\n  const city = localStorage.getItem(\"city\") || \"\";\n  const [themeMode, setThemeMode] = useState(\"light\");\n  const toggleTheme = () => {\n    setThemeMode(mode => mode === \"light\" ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themeMode === \"light\" ? lightTheme : darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.component,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.leftContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"#fff\",\n            fontSize: \"2.5rem\",\n            marginBottom: \"1rem\"\n          },\n          children: \"Weather App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#fff\",\n            fontSize: \"1.2rem\",\n            textAlign: \"center\",\n            maxWidth: \"80%\"\n          },\n          children: \"Get real-time weather updates for any location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          children: \"Toggle Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.rightContainer,\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          city: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chatbot,\n          children: [/*#__PURE__*/_jsxDEV(ChatbotComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 7\n  }, this);\n};\n_s(Weather, \"Xk4QxaYMOmnYgANRY7PJE/3vb+4=\", false, function () {\n  return [useStyles];\n});\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Box","makeStyles","styled","ThemeProvider","logo","Form","ChatBot","Header","Navbar","useStyles","theme","component","height","display","alignItems","justifyContent","background","backgroundSize","breakpoints","down","flexDirection","leftContainer","width","borderRadius","rightContainer","position","chatbot","bottom","left","weatherGrid","gridTemplateColumns","gridGap","padding","weatherCard","boxShadow","weatherIcon","weatherTemp","fontSize","fontWeight","margin","weatherDesc","lightTheme","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","darkTheme","Weather","classes","city","localStorage","getItem","themeMode","setThemeMode","toggleTheme","mode","color","marginBottom","textAlign","maxWidth"],"sources":["/Users/checkmate/Desktop/PHASE2 PROJECT/Weather/src/components/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport logo from \"../images/bg.jpg\";\nimport Form from \"./Form\";\nimport ChatBot from \"react-simple-chatbot\";\nimport Header from \"./Header\";\nimport Navbar from \"./Navbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  component: {\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    background: `linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)), url(${logo})`,\n    backgroundSize: \"cover\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  leftContainer: {\n    height: \"100%\",\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: \"20px 0 0 20px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"30%\",\n      borderRadius: \"20px 20px 0 0\",\n    },\n  },\n  rightContainer: {\n    height: \"67%\",\n    width: \"26%\",\n    position: \"relative\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"70%\",\n    },\n  },\n  chatbot: {\n    position: \"absolute\",\n    bottom: \"10px\",\n    left: \"10px\",\n  },\n  weatherGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n    gridGap: \"20px\",\n    padding: \"20px\",\n  },\n  weatherCard: {\n    background: \"#fff\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.2)\",\n  },\n  weatherIcon: {\n    width: \"50px\",\n    height: \"50px\",\n  },\n  weatherTemp: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n    margin: \"0\",\n  },\n  weatherDesc: {\n    fontSize: \"1.2rem\",\n    margin: \"0\",\n  },\n}));\n\nconst lightTheme = {\n  background: \"#f5f8fb\",\n  headerBgColor: \"#0084ff\",\n  headerFontColor: \"#fff\",\n  headerFontSize: \"15px\",\n  botBubbleColor: \"#0084ff\",\n  botFontColor: \"#fff\",\n  userBubbleColor: \"#fff\",\n  userFontColor: \"#4a4a4a\",\n};\n\nconst darkTheme = {\n    background: \"#222\",\n    headerBgColor: \"#0084ff\",\n    headerFontColor: \"#fff\",\n    headerFontSize: \"15px\",\n    botBubbleColor: \"#0084ff\",\n    botFontColor: \"#fff\",\n    userBubbleColor: \"#fff\",\n    userFontColor: \"#4a4a4a\",\n  };\n  \n  const Weather = () => {\n    const classes = useStyles();\n    const city = localStorage.getItem(\"city\") || \"\";\n  \n    const [themeMode, setThemeMode] = useState(\"light\");\n  \n    const toggleTheme = () => {\n      setThemeMode((mode) => (mode === \"light\" ? \"dark\" : \"light\"));\n    };\n  \n    return (\n      <ThemeProvider theme={themeMode === \"light\" ? lightTheme : darkTheme}>\n        <Box className={classes.component}>\n          <Box className={classes.leftContainer}>\n            <h1\n              style={{\n                color: \"#fff\",\n                fontSize: \"2.5rem\",\n                marginBottom: \"1rem\",\n              }}\n            >\n              Weather App\n            </h1>\n            <p\n              style={{\n                color: \"#fff\",\n                fontSize: \"1.2rem\",\n                textAlign: \"center\",\n                maxWidth: \"80%\",\n              }}\n            >\n              Get real-time weather updates for any location\n            </p>\n            <button onClick={toggleTheme}>Toggle Theme</button>\n          </Box>\n          <Box className={classes.rightContainer}>\n            <Form city={city} />\n            <div className={classes.chatbot}>\n              <ChatbotComponent />\n              <Header />\n              <Navbar />\n            </div>\n          </Box>\n        </Box>\n      </ThemeProvider>\n    );\n  };\n  \n  export default Weather;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}