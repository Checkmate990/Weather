{"ast":null,"code":"var _jsxFileName = \"/Users/checkmate/Desktop/PHASE2 PROJECT/Weather/src/components/Weather.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport logo from \"../images/bg.jpg\";\nimport Form from \"./Form\";\nimport ChatBot from \"react-simple-chatbot\";\nimport { ThemeProvider } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  component: {\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    background: `linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)), url(${logo})`,\n    backgroundSize: \"cover\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\"\n    }\n  },\n  leftContainer: {\n    height: \"100%\",\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: \"20px 0 0 20px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"30%\",\n      borderRadius: \"20px 20px 0 0\"\n    }\n  },\n  rightContainer: {\n    background: \"#534679\",\n    height: \"62%\",\n    width: \"25%\",\n    position: \"relative\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"70%\"\n    }\n  },\n  chatbot: {\n    position: \"absolute\",\n    bottom: \"10px\",\n    left: \"10px\"\n  },\n  weatherGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n    gridGap: \"20px\",\n    padding: \"20px\"\n  },\n  weatherCard: {\n    background: \"#fff\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.2)\"\n  },\n  weatherIcon: {\n    width: \"50px\",\n    height: \"50px\"\n  },\n  weatherTemp: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n    margin: \"0\"\n  },\n  weatherDesc: {\n    fontSize: \"1.2rem\",\n    margin: \"0\"\n  }\n}));\nconst theme = {\n  background: \"#f5f8fb\",\n  headerBgColor: \"#0084ff\",\n  headerFontColor: \"#fff\",\n  headerFontSize: \"15px\",\n  botBubbleColor: \"#0084ff\",\n  botFontColor: \"#fff\",\n  userBubbleColor: \"#fff\",\n  userFontColor: \"#4a4a4a\"\n};\nconst ChatbotComponent = _ref => {\n  _s();\n  let {\n    onCitySubmit\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    localStorage.removeItem(\"city\");\n  }, []);\n  const steps = [{\n    id: \"1\",\n    message: \"Hi, what is your name?\",\n    trigger: \"name\"\n  }, {\n    id: \"name\",\n    user: true,\n    trigger: \"3\",\n    validator: value => {\n      if (!value || value.trim() === \"\") {\n        return \"Please enter your name.\";\n      }\n      setName(value);\n      return true;\n    }\n  }, {\n    id: \"3\",\n    message: `Hi ${name}! Which city's weather would you like to see?`,\n    trigger: \"city\"\n  }, {\n    id: \"city\",\n    user: true,\n    trigger: \"5\",\n    validator: value => {\n      if (!value || value.trim() === \"\") {\n        return \"Please enter a city.\";\n      }\n      localStorage.setItem(\"city\", value); // set the city value in localStorage\n      return true;\n    }\n  }, {\n    id: \"5\",\n    message: `Fetching weather for ${localStorage.getItem(\"city\")}...`,\n    end: true // end the chatbot dialog after this step\n  }];\n\n  useEffect(() => {\n    localStorage.removeItem(\"city\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      steps: steps,\n      hideHeader: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotComponent, \"HHIHdOvBTWGEuVt18Kq1t2i9wYY=\");\n_c = ChatbotComponent;\nconst Weather = () => {\n  _s2();\n  const classes = useStyles();\n  const city = localStorage.getItem(\"city\") || \"\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.component,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.leftContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#fff\",\n          fontSize: \"2.5rem\",\n          marginBottom: \"1rem\"\n        },\n        children: \"Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#fff\",\n          fontSize: \"1.2rem\",\n          textAlign: \"center\",\n          maxWidth: \"80%\"\n        },\n        children: \"Get real-time weather updates for any location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.rightContainer,\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        city: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chatbot,\n        children: /*#__PURE__*/_jsxDEV(ChatbotComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 7\n  }, this);\n};\n_s2(Weather, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c2 = Weather;\nexport default Weather;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatbotComponent\");\n$RefreshReg$(_c2, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Box","makeStyles","logo","Form","ChatBot","ThemeProvider","useStyles","theme","component","height","display","alignItems","justifyContent","background","backgroundSize","breakpoints","down","flexDirection","leftContainer","width","borderRadius","rightContainer","position","chatbot","bottom","left","weatherGrid","gridTemplateColumns","gridGap","padding","weatherCard","boxShadow","weatherIcon","weatherTemp","fontSize","fontWeight","margin","weatherDesc","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","ChatbotComponent","onCitySubmit","name","setName","localStorage","removeItem","steps","id","message","trigger","user","validator","value","trim","setItem","getItem","end","Weather","classes","city","color","marginBottom","textAlign","maxWidth"],"sources":["/Users/checkmate/Desktop/PHASE2 PROJECT/Weather/src/components/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport logo from \"../images/bg.jpg\";\nimport Form from \"./Form\";\nimport ChatBot from \"react-simple-chatbot\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst useStyles = makeStyles((theme) => ({\n  component: {\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    background: `linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)), url(${logo})`,\n    backgroundSize: \"cover\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  leftContainer: {\n    height: \"100%\",\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: \"20px 0 0 20px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"30%\",\n      borderRadius: \"20px 20px 0 0\",\n    },\n  },\n  rightContainer: {\n    background: \"#534679\",\n    height: \"62%\",\n    width: \"25%\",\n    position: \"relative\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"70%\",\n    },\n  },\n  chatbot: {\n    position: \"absolute\",\n    bottom: \"10px\",\n    left: \"10px\",\n  },\n  weatherGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n    gridGap: \"20px\",\n    padding: \"20px\",\n  },\n  weatherCard: {\n    background: \"#fff\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.2)\",\n  },\n  weatherIcon: {\n    width: \"50px\",\n    height: \"50px\",\n  },\n  weatherTemp: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n    margin: \"0\",\n  },\n  weatherDesc: {\n    fontSize: \"1.2rem\",\n    margin: \"0\",\n  },\n}));\n\nconst theme = {\n  background: \"#f5f8fb\",\n  headerBgColor: \"#0084ff\",\n  headerFontColor: \"#fff\",\n  headerFontSize: \"15px\",\n  botBubbleColor: \"#0084ff\",\n  botFontColor: \"#fff\",\n  userBubbleColor: \"#fff\",\n  userFontColor: \"#4a4a4a\",\n};\n\nconst ChatbotComponent = ({ onCitySubmit }) => {\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.removeItem(\"city\");\n  }, []);\n\n  const steps = [    {      id: \"1\",      message: \"Hi, what is your name?\",      trigger: \"name\",    },    {      id: \"name\",      user: true,      trigger: \"3\",      validator: (value) => {        if (!value || value.trim() === \"\") {          return \"Please enter your name.\";        }        setName(value);        return true;      },    },    {      id: \"3\",      message: `Hi ${name}! Which city's weather would you like to see?`,\n      trigger: \"city\",\n    },\n    {\n      id: \"city\",\n      user: true,\n      trigger: \"5\",\n\n      validator: (value) => {\n        if (!value || value.trim() === \"\") {\n          return \"Please enter a city.\";\n        }\n        localStorage.setItem(\"city\", value); // set the city value in localStorage\n        return true;\n      },\n    },\n    {\n      id: \"5\",\n      message: `Fetching weather for ${localStorage.getItem(\"city\")}...`,\n      end: true, // end the chatbot dialog after this step\n    },\n  ];\n  \n  useEffect(() => {\n    localStorage.removeItem(\"city\");\n}, []);\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ChatBot steps={steps} hideHeader={true} />\n    </ThemeProvider>\n  );\n};\n  \n  \n\nconst Weather = () => {\n    const classes = useStyles();\n    const city = localStorage.getItem(\"city\") || \"\";\n  \n    return (\n      <Box className={classes.component}>\n        <Box className={classes.leftContainer}>\n          <h1\n            style={{\n              color: \"#fff\",\n              fontSize: \"2.5rem\",\n              marginBottom: \"1rem\",\n            }}\n          >\n            Weather App\n          </h1>\n          <p\n            style={{\n              color: \"#fff\",\n              fontSize: \"1.2rem\",\n              textAlign: \"center\",\n              maxWidth: \"80%\",\n            }}\n          >\n            Get real-time weather updates for any location\n          </p>\n        </Box>\n        <Box className={classes.rightContainer}>\n          <Form city={city} />\n          <div className={classes.chatbot}>\n            <ChatbotComponent />\n          </div>\n        </Box>\n      </Box>\n    );\n  };\n  \n  \n  \n\nexport default Weather\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}